#!/usr/bin/python3
# -*- coding: UTF-8 -*-
# version: "1.0"
# author: "FreeK0x00"


import socket
import sys
import threading
import argparse
import time


def getPortBanner(ip, p):
	""" Creates a TCP socket and attempts to connect via supplied ports """
	port = int(p)
	try:
		# Create a new socket
		s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
		if port == 3306 or port == 1521 or port == 22 or port == 23:
			s.settimeout(5)
		else:
			s.settimeout(0.2)
		# Print if the port is open
		if not s.connect_ex((ip, port)):
			print('[+] %s:%d/TCP Open' % (ip, port))
		s.send('HELLO\r\n')
		# results = s.recv(1024)
		# print(str(results))
		# print(ip+"\t"+p+" Open\t"+results.decode().split('\r\n')[0].strip('\r\n'))
	except Exception:
		pass
	finally:
		s.close()


def GetPortsBanner(ip, ports):
	print('[*] Starting TCP port scan on IP %s' % ip)
	for p in ports:
		getPortBanner(ip, str(p))
	print('[+] TCP scan on IP %s complete' % ip)


def CscanPortBanner(ip, ports):
	if '/24' in ip:
		print('ip/24: '+ip)
		ipc = (ip.split('.')[:-1])
		for i in range(1, 256):
			ip = ('.'.join(ipc)+'.'+str(i))
			threading._start_new_thread(GetPortsBanner(ip, ports))
			time.sleep(0.1)
	else:
		GetPortsBanner(ip, ports)


def BscanPortBanner(ip, ports):
	if '/16' in ip:
		print('ip/16: '+ip)
		ipc = (ip.split('.')[:-2])
		for i in range(1, 256):
			ip = ('.'.join(ipc)+'.'+str(i)+'.0/24')
			CscanPortBanner(ip, ports)


def AscanPortBanner(ip, ports):
	if '/8' in ip:
		print('ip/8: '+ip)
		ipc = (ip.split('.')[:-3])
		for i in range(1, 256):
			ip = ('.'.join(ipc)+'.'+str(i)+'.0/16')
			BscanPortBanner(ip, ports)


if __name__ == '__main__':
	parser = argparse.ArgumentParser()
	parser.add_argument('-i', '--ip', help='IP or IP/24')
	parser.add_argument('-p', '--port', help="Example: 80 80-89 80,443,3306,8080")
	parser.add_argument('-f', '--ip_file', help="ip.txt ip24.txt ip16.txt ip8.txt")
	args = parser.parse_args()
	ip = args.ip
	tmpPorts = args.port
	ipfile = args.ip_file
	if ip is None and ipfile is None:
		print('[-]Error: ip or ipfile is Null!')
		print('[-]Help: python3 PortScan.py -h or --help')
		sys.exit(1)
	if tmpPorts:
		if ',' in tmpPorts and '-' not in tmpPorts:
			ports = tmpPorts.split(',')
			print(ports)
		elif '-' in tmpPorts and ',' not in tmpPorts:
			ports = tmpPorts.split('-')
			tmpports = []
			[tmpports.append(i) for i in range(int(ports[0]), int(ports[1]) + 1)]
			ports = tmpports
			print(ports)
		elif '-' in tmpPorts and ',' in tmpPorts:
			ports = tmpPorts.split(',')
			for p in ports:
				if '-' in str(p):
					ports.remove(p)
					tmp = p.split('-')
					[ports.append(str(i)) for i in range(int(tmp[0]), int(tmp[1]) + 1)]
			print(ports)
		else:
			print('[-]Error: portlist is illegal!! Please check and try again!!')
			sys.exit(1)

	else:
		print('Start Scan {} Default Ports'.format(ip))
		ports = [21, 22, 53, 80, 135, 139, 389, 443, 445, 1025, 1433, 1521, 3306, 3312, 3389, 4444, 5432, 5900, 6379, 7001, 8000, 8080, 8081, 8082, 8083, 8090, 8444, 8888, 27017]
		print('Default Ports list: ', ports)
	if ip:
		if '/16' in ip:
			BscanPortBanner(ip, ports)
		elif '/8' in ip:
			AscanPortBanner(ip, ports)
		elif '/24' in ip:
			CscanPortBanner(ip, ports)
		else:
			CscanPortBanner(ip, ports)
	elif ipfile:
		iplist = []
		with open(str(ipfile)) as f:
			while True:
				line = str(f.readline()).strip()
				if line:
					iplist.append(line)
				else:
					break
		if ipfile == 'ip24.txt':
			print('[+] Start Scan iplist/24')
			for ip in iplist:
				CscanPortBanner(ip + '/24', ports)
		elif ipfile == 'ip16.txt':
			print('[+] Start Scan iplist/16')
			for ip in iplist:
				BscanPortBanner(ip + '/16', ports)
		elif ipfile == 'ip8.txt':
			print('[+] Start Scan iplist/8')
			for ip in iplist:
				AscanPortBanner(ip + '/8', ports)
		else:
			print('[+] Start Scan iplist (any txt file)')
			for ip in iplist:
				CscanPortBanner(ip, ports)
